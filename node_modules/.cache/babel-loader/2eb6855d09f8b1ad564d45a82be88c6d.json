{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamverma/Downloads/demofirebase/src/components/Contact.js\";\n\n/* eslint-disable no-undef */\n// https://firebase.google.com/docs/database/web/read-and-write?authuser=1#read_data_once\nimport React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\"; // icons\n\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\"; //TODO: add firebase\n// context stuffs\n//TODO: import context and action: update and single_contact\n\nimport { ContactContext } from \"../context/Context\";\nimport { CONTACT_TO_UPDATE, SET_CONTACT, SET_SINGLE_CONTACT } from \"../context/action.types\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Contact = ({\n  contact,\n  contactKey\n}) => {\n  //TODO: destructuring dispatch from the context\n  const {\n    dispatch\n  } = useContext(ContactContext); // history hooks to get history\n\n  const history = useHistory(); // to delete the contact when delete contact is clicked\n\n  const deleteContact = () => {\n    //TODO: create this method from firebase\n    firebase.database().ref(`/contacts/${contactKey}`).remove().then(() => {\n      toast(\"Deleted Successfully\", {\n        type: \"warning\"\n      });\n    }).catch(err => console.log(err));\n  }; // update the star/important contact ,ie, star it or unstar the single contact\n\n\n  const updateImpContact = () => {\n    //TODO: update (star) contact, use contactKey\n    firebase.database().ref(`/contacts/${contactKey}`).update({\n      star: !contact.star\n    }, err => {\n      console.log(err);\n    }).then(() => {\n      toast(\"Contact Updated\", {\n        type: \"info\"\n      });\n    }).catch(err => console.log(err));\n  }; // when the update icon/ pen ion is clicked\n\n\n  const updateContact = () => {\n    // dispatching one action to update contact\n    //TODO: DONE use dispatch to update\n    dispatch({\n      type: CONTACT_TO_UPDATE,\n      payload: contact,\n      key: contactKey\n    }); // and pushing to the add contact screen\n\n    history.push(\"/contact/add\");\n  }; // to view a single contact in the contact/view screen\n\n\n  const viewSingleContact = contact => {\n    // setting single contact in state\n    //TODO: use dispatch to view single contact\n    dispatch({\n      type: SET_SINGLE_CONTACT,\n      payload: contact\n    }); // sending...\n\n    history.push(\"/contact/view\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: () => updateImpContact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, contact.star ? /*#__PURE__*/React.createElement(FaStar, {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegStar, {\n    className: \" text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: contact.picture,\n    alt: \"\",\n    className: \"img-circle profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    onClick: () => viewSingleContact(contact),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, contact.phoneNumber), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, contact.email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, contact.address)), /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MdDelete, {\n    onClick: () => deleteContact(),\n    color: \"danger\",\n    className: \"text-danger icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(MdEdit, {\n    className: \"icon text-info ml-2\",\n    onClick: () => updateContact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Users/shubhamverma/Downloads/demofirebase/src/components/Contact.js"],"names":["React","useContext","Row","Col","FaRegStar","FaStar","MdDelete","MdEdit","ContactContext","CONTACT_TO_UPDATE","SET_CONTACT","SET_SINGLE_CONTACT","useHistory","toast","Contact","contact","contactKey","dispatch","history","deleteContact","firebase","database","ref","remove","then","type","catch","err","console","log","updateImpContact","update","star","updateContact","payload","key","push","viewSingleContact","picture","name","phoneNumber","email","address"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n// https://firebase.google.com/docs/database/web/read-and-write?authuser=1#read_data_once\n\nimport React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\n// icons\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\n\n//TODO: add firebase\n\n// context stuffs\n//TODO: import context and action: update and single_contact\nimport { ContactContext } from \"../context/Context\";\nimport {\n\tCONTACT_TO_UPDATE,\n\tSET_CONTACT,\n\tSET_SINGLE_CONTACT,\n} from \"../context/action.types\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst Contact = ({ contact, contactKey }) => {\n\t//TODO: destructuring dispatch from the context\n\tconst { dispatch } = useContext(ContactContext);\n\n\t// history hooks to get history\n\tconst history = useHistory();\n\n\t// to delete the contact when delete contact is clicked\n\tconst deleteContact = () => {\n\t\t//TODO: create this method from firebase\n\t\tfirebase\n\t\t\t.database()\n\t\t\t.ref(`/contacts/${contactKey}`)\n\t\t\t.remove()\n\t\t\t.then(() => {\n\t\t\t\ttoast(\"Deleted Successfully\", { type: \"warning\" });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\t// update the star/important contact ,ie, star it or unstar the single contact\n\tconst updateImpContact = () => {\n\t\t//TODO: update (star) contact, use contactKey\n\t\tfirebase\n\t\t\t.database()\n\t\t\t.ref(`/contacts/${contactKey}`)\n\t\t\t.update({ star: !contact.star }, (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\ttoast(\"Contact Updated\", { type: \"info\" });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\t// when the update icon/ pen ion is clicked\n\tconst updateContact = () => {\n\t\t// dispatching one action to update contact\n\t\t//TODO: DONE use dispatch to update\n\t\tdispatch({\n\t\t\ttype: CONTACT_TO_UPDATE,\n\t\t\tpayload: contact,\n\t\t\tkey: contactKey,\n\t\t});\n\n\t\t// and pushing to the add contact screen\n\t\thistory.push(\"/contact/add\");\n\t};\n\n\t// to view a single contact in the contact/view screen\n\tconst viewSingleContact = (contact) => {\n\t\t// setting single contact in state\n\t\t//TODO: use dispatch to view single contact\n\t\tdispatch({\n\t\t\ttype: SET_SINGLE_CONTACT,\n\t\t\tpayload: contact,\n\t\t});\n\n\t\t// sending...\n\t\thistory.push(\"/contact/view\");\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<Col\n\t\t\t\t\tmd=\"1\"\n\t\t\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"icon\" onClick={() => updateImpContact()}>\n\t\t\t\t\t\t{contact.star ? (\n\t\t\t\t\t\t\t<FaStar className=\" text-primary\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<FaRegStar className=\" text-info\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col\n\t\t\t\t\tmd=\"2\"\n\t\t\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\n\t\t\t\t>\n\t\t\t\t\t<img src={contact.picture} alt=\"\" className=\"img-circle profile\" />\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"8\" onClick={() => viewSingleContact(contact)}>\n\t\t\t\t\t<div className=\"text-primary\">{contact.name}</div>\n\n\t\t\t\t\t<div className=\"text-secondary\">{contact.phoneNumber}</div>\n\t\t\t\t\t<div className=\"text-secondary\">{contact.email}</div>\n\n\t\t\t\t\t<div className=\"text-info\">{contact.address}</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col\n\t\t\t\t\tmd=\"1\"\n\t\t\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\n\t\t\t\t>\n\t\t\t\t\t<MdDelete\n\t\t\t\t\t\tonClick={() => deleteContact()}\n\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\tclassName=\"text-danger icon\"\n\t\t\t\t\t/>\n\t\t\t\t\t<MdEdit\n\t\t\t\t\t\tclassName=\"icon text-info ml-2\"\n\t\t\t\t\t\tonClick={() => updateContact()}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}